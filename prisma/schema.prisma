// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Comment {
  comment_id    Int          @id @default(autoincrement())
  name          String?
  topic         String?
  content       String?
  upvotes       Int          @default(0)
  createdAt     DateTime     @default(now()) @map(name: "created_at")
  updatedAt     DateTime     @updatedAt @map(name: "updated_at")
  author        User         @relation(fields: [authorId], references: [user_id])
  authorId      Int
  resolved      Boolean      @default(false)
  parentCommentId Int?       @map(name: "parent_comment_id")
  parentComment Comment?     @relation("CommentReplies", fields: [parentCommentId], references: [comment_id])
  replies       Comment[]    @relation("CommentReplies")
  anonymous        Boolean   @default(false)
  @@map(name: "comments")
}

model User {
  user_id       Int       @default(autoincrement()) @id
  password        String?      @unique
  name          String?
  email         String?   @unique

  comments         Comment[]
}

